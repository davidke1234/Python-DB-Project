/*
drop table if exists BusinessCategory Cascade;
drop table if exists BusinessAttribute Cascade;
drop table if exists BusinesCheckin Cascade;
drop table if exists UserFriends Cascade;
drop table if exists BusinessReview Cascade;
drop table if exists review;
drop table if exists friends;
drop table if exists checkin;
drop table if exists users;
drop table if exists category;
--drop table if exists hours;
drop table if exists attribute;
drop table if exists business cascade;
*/
--drop table if exists PostalCodeData;
--select * from postalCodeData
--select * from business
/*
delete from Business;
delete from Category;
delete from Attribute;

select count(*) from business;
select * from category;
select * from Attribute;
INSERT INTO Attribute (AttributeName, AttributeValue) VALUES ('valet','False')
*/


CREATE TABLE Business (
	BusinessId char(22), 
	Name varchar(100) NOT NULL,
	Address varchar(80) NOT NULL,
	City varchar(30) NOT NULL,
	State char(2) NOT NULL,
	PostalCode char(5),
	Stars numeric(3,1),
	ReviewCount int,
	NumCheckins int DEFAULT 0,
	ReviewRating numeric(3,1) DEFAULT 0.0,
	PRIMARY KEY (BusinessId)
	--FOREIGN KEY (PostalCode) REFERENCES Public.PostalCodeData(PostalCode)
);

CREATE TABLE Category (
	CategoryId int GENERATED BY DEFAULT AS IDENTITY, 
	CategoryName varchar(40) Unique,
	PRIMARY KEY (CategoryId)
);

CREATE TABLE BusinessCategory (
	BusinessId char(22) NOT NULL,
	CategoryId int NOT NULL,
	PRIMARY KEY (BusinessId, CategoryId),
	FOREIGN KEY (BusinessId) REFERENCES Public.Business(BusinessId),
	FOREIGN KEY (CategoryId) REFERENCES Public.Category(CategoryId)
);

CREATE TABLE Attribute (
	AttributeId int GENERATED BY DEFAULT AS IDENTITY, 
	AttributeName varchar(40) Unique,
	PRIMARY KEY (AttributeId)
);

CREATE TABLE BusinessAttribute (
	BusinessId char(22) NOT NULL,
	AttributeId int NOT NULL,
	AttributeValue varchar(30),
	PRIMARY KEY (BusinessId, AttributeId),
	FOREIGN KEY (BusinessId) REFERENCES Public.Business(BusinessId),
	FOREIGN KEY (AttributeId) REFERENCES Public.Attribute(AttributeId)
);

CREATE TABLE CheckIn (
	CheckInId int GENERATED BY DEFAULT AS IDENTITY, 
	CheckinWeekDay varchar(10),
	CheckinHour varchar(5),
	CheckinCount smallint,
	PRIMARY KEY (CheckInId)
);

CREATE TABLE BusinesCheckin (
	CheckInId int NOT NULL,  
	BusinessId char(22) NOT NULL,  
	PRIMARY KEY (CheckInId, BusinessId),
	FOREIGN KEY (CheckInId) REFERENCES Public.CheckIn(CheckInId),
	FOREIGN KEY (BusinessId) REFERENCES Public.Business(BusinessId)
);


CREATE TABLE Users (
	UserId char(22), 
	Name varchar(30),
	YelpingSince varchar(10),
	ReviewCount int,
	Fans smallint,
	AverageStars numeric(3,1),
	Funny int,
	Useful int,
	Cool int,
	PRIMARY KEY (UserId)
);

CREATE TABLE Friends (
	FriendId char(22) NOT NULL,  
	PRIMARY KEY (FriendId),
	FOREIGN KEY (FriendId) REFERENCES Public.Users(UserId)
);

CREATE TABLE UserFriends (
	UserId char(22) NOT NULL,  
	FriendId char(22) NOT NULL,  
	PRIMARY KEY (UserId, FriendId),
	FOREIGN KEY (UserId) REFERENCES Public.Users(UserId),
	FOREIGN KEY (FriendId) REFERENCES Public.Friends(FriendId)
);

CREATE TABLE Review (
	ReviewId char(22),  
	Stars smallint,
	ReviewDate varchar(10),
	Text varchar(1200),
	Useful smallint,
	Funny smallint,
	Cool smallint,
	PRIMARY KEY (ReviewId)
);

CREATE TABLE BusinessReview (
	ReviewId char(22),  
	UserId char(22) NOT NULL, 
	BusinessId char(22) NOT NULL, 
	PRIMARY KEY (ReviewId,UserId,BusinessId),
	FOREIGN KEY (ReviewId) REFERENCES Public.Review(ReviewId),
	FOREIGN KEY (UserId) REFERENCES Public.Users(UserId),
	FOREIGN KEY (BusinessId) REFERENCES Public.Business(BusinessId)
);

/*

CREATE TABLE PostalCode (
	PostalCode char(5),
	MedianIncome int NULL,
	MeanIncome int NULL,
	Population int NULL,
	PRIMARY KEY (PostalCode)
);
*/






