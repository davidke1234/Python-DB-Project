/*
drop table if exists BusinessCategory Cascade;
drop table if exists BusinessAttribute Cascade;
drop table if exists BusinessCheckin Cascade;
drop table if exists BusinessReview Cascade;
drop table if exists business cascade;
drop table if exists UserFriends Cascade;
drop table if exists review;
drop table if exists friends;
drop table if exists checkin;
drop table if exists users;
drop table if exists category;
--drop table if exists hours;
drop table if exists attribute;

*/
--drop table if exists PostalCodeData;
--select * from postalCode
--select * from Business
--SELECT DISTINCT state FROM  business  ORDER BY state
/*

delete from businessAttribute;
delete from businessCheckin;
delete from checkin;
delete from businessCategory;
delete from Business;
delete from Category;
delete from Attribute;
delete from review
delete from users
delete from userFriends


select * from business;
select * from category;
select * from Attribute 
select * from businessAttribute;
select * from businessCategory;
select * from businessReview;
select * from Review;


select count(*) from Attribute;  --81
select count(*) from businessAttribute;  --227536
select count(*) from category;  --226
select count(*) from businessCategory;  --33619
select count(*) from business;  --11481
select count(*) from checkin;
select count(*) from businessCheckin;  --481360
select count(*) from review; --416479
select count(*) from businessReview;  --416465
select count(*) from users; --192993
select count(*) from userFriends; --1052652
select count(*) from postalCode; --32630

select * from businessCategory
"duHFBe87uNSXImQmvBh87Q"	47921
"duHFBe87uNSXImQmvBh87Q"	47922

select * from category
select * from attribute

INSERT INTO Attribute (AttributeName) 
SELECT 'GoodForKids2'
WHERE NOT EXISTS (SELECT AttributeId FROM Attribute WHERE attributeName = 'GoodForKids2')
    
select * from businessAttribute ba
join attribute a on a.attributeId = ba.attributeId 

INSERT INTO businessAttribute (businessId, AttributeId, AttributeValue) 
VALUES('duHFBe87uNSXImQmvBh87Q',1, 'True')

INSERT INTO Users (userid, name, yelpingsince, reviewcount, fans, averagestars, funny, useful, cool) VALUES ('hUpyi7pmfoh4900GYON5vw','Kt','2015-07-13',3,0,3.67,1,0)

INSERT INTO UserFriends (UserId, FriendId) VALUES('fmww-Gf2LnYfL40eezDDEA','jAsODpZJyieaO29JtmkGlA')

select * from  businessReview
where businessid = 'Ccf2KBKnNc8lWB4sOZRo7g'

select * from  business
where businessid = 'YcGHCoSkl2PLKsHQCiu0HA'

select * from businessCheckin where businessId = 'pE0ktQsw5x0chqsoMSqCUQ'
select * from checkin

SELECT distinct c.categoryName from category c
join BusinessCategory bc on bc.categoryId = c.categoryId
join business b on b.businessId = bc.businessId
WHERE b.State = 'NC' and b.city = 'Gastonia' and b.postalCode = '28054' 

SELECT DISTINCT c.categoryName from category c JOIN BusinessCategory bc on bc.categoryId = c.categoryId JOIN business b on b.businessId = bc.businessId WHERE b.State = 'OH' and b.city = 'Bedford' and b.postalCode = '44146'

-----------------------------------------

*/


CREATE TABLE Business (
	BusinessId char(22), 
	Name varchar(100) NOT NULL,
	Address varchar(80) NOT NULL,
	City varchar(30) NOT NULL,
	State char(2) NOT NULL,
	PostalCode char(5),
	Stars numeric(3,1),
	ReviewCount int,
	NumCheckins int DEFAULT 0,
	ReviewRating numeric(3,1) DEFAULT 0.0,
	PRIMARY KEY (BusinessId),
	FOREIGN KEY (PostalCode) REFERENCES Public.PostalCode(PostalCode)
);

CREATE TABLE Category (
	CategoryId int GENERATED BY DEFAULT AS IDENTITY, 
	CategoryName varchar(40) Unique,
	PRIMARY KEY (CategoryId)
);

CREATE TABLE BusinessCategory (
	BusinessId char(22) NOT NULL,
	CategoryId int NOT NULL,
	PRIMARY KEY (BusinessId, CategoryId),
	FOREIGN KEY (BusinessId) REFERENCES Public.Business(BusinessId),
	FOREIGN KEY (CategoryId) REFERENCES Public.Category(CategoryId)
);

CREATE TABLE Attribute (
	AttributeId int GENERATED BY DEFAULT AS IDENTITY, 
	AttributeName varchar(40) Unique,
	PRIMARY KEY (AttributeId)
);

CREATE TABLE BusinessAttribute (
	BusinessId char(22) NOT NULL,
	AttributeId int NOT NULL,
	AttributeValue varchar(30),
	PRIMARY KEY (BusinessId, AttributeId),
	FOREIGN KEY (BusinessId) REFERENCES Public.Business(BusinessId),
	FOREIGN KEY (AttributeId) REFERENCES Public.Attribute(AttributeId)
);

/*
CREATE TABLE Checkin (
	CheckinId int GENERATED BY DEFAULT AS IDENTITY, 
	CheckinWeekDay varchar(10),
	CheckinHour varchar(5),
	CheckinCount smallint,
	PRIMARY KEY (CheckInId)
);
*/

CREATE TABLE BusinessCheckin (
	BusinessId char(22) NOT NULL,  
	CheckinWeekDay varchar(10),
	CheckinHour varchar(5),
	CheckinCount smallint,
	FOREIGN KEY (BusinessId) REFERENCES Public.Business(BusinessId)
);


CREATE TABLE Users (
	UserId char(22), 
	Name varchar(30),
	YelpingSince varchar(10),
	ReviewCount int,
	Fans smallint,
	AverageStars numeric(3,1),
	Funny int,
	Useful int,
	Cool int,
	PRIMARY KEY (UserId)
);

/*
CREATE TABLE Friends (
	FriendId char(22) NOT NULL,  
	PRIMARY KEY (FriendId),
	FOREIGN KEY (FriendId) REFERENCES Public.Users(UserId)
);
*/

CREATE TABLE UserFriends (
	UserId char(22) NOT NULL,  
	FriendId char(22) NOT NULL,  
	PRIMARY KEY (UserId, FriendId),
	FOREIGN KEY (UserId) REFERENCES Public.Users(UserId)
	--FOREIGN KEY (FriendId) REFERENCES Public.Friends(FriendId)
);

CREATE TABLE Review (
	ReviewId char(22),  
	Stars smallint,
	ReviewDate varchar(10),
	Text varchar(1200),
	Useful smallint,
	Funny smallint,
	Cool smallint,
	PRIMARY KEY (ReviewId)
);

CREATE TABLE BusinessReview (
	ReviewId char(22),  
	UserId char(22) NOT NULL, 
	BusinessId char(22) NOT NULL, 
	PRIMARY KEY (ReviewId,UserId,BusinessId),
	FOREIGN KEY (ReviewId) REFERENCES Public.Review(ReviewId),
	FOREIGN KEY (UserId) REFERENCES Public.Users(UserId),
	FOREIGN KEY (BusinessId) REFERENCES Public.Business(BusinessId)
);

CREATE TABLE PostalCode (
	PostalCode char(5),
	MedianIncome int NULL,
	MeanIncome int NULL,
	Population int NULL,
	PRIMARY KEY (PostalCode)
);







